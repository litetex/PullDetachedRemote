name: Master CI

on:
  push:
    branches: master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1
      
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal
     
    - name: Publish
      working-directory: PullDetachedRemote
      run: dotnet publish -c Release -r alpine.3.9-x64 /p:PublishSingleFile=true
        
    - name: Release - Create Draft for Release
      id: create_draft
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_draft.outputs.upload_url }} 
        asset_path: ./PullDetachedRemote/bin/Release/netcoreapp3.1/alpine.3.9-x64/publish/PullDetachedRemote
        asset_name: PullDetachedRemote
        asset_content_type: application/octet-stream
        
    - name: Copy Dockerfile into build output
      run: cp build/Dockerfile PullDetachedRemote/bin/Release/netcoreapp3.1/alpine.3.9-x64/publish/
          
    - name: Builder Dockerimage and publish to Registry
      # Let's call this Publish-... when it actually builds and publishes... 
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: litetex/pulldetachedremote
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,master-${{ github.sha }}"
        workdir: PullDetachedRemote/bin/Release/netcoreapp3.1/alpine.3.9-x64/publish/
